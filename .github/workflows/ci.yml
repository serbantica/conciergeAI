name: CI/CD with UV

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: uv sync --all-extras --dev
    
    - name: Run linting
      run: |
        uv run black --check .
        uv run isort --check-only .
        uv run flake8 .
    
    - name: Run type checking
      run: uv run mypy .
    
    - name: Run tests
      run: uv run pytest -v --cov=./ --cov-report=xml
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml

  docker:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      run: |
        docker build -t ai-concierge:latest .
        docker build -f Dockerfile.conda -t ai-concierge:conda .
    
    - name: Test Docker image
      run: |
        docker run -d -p 8000:8000 --name test-container ai-concierge:latest
        sleep 10
        curl -f http://localhost:8000/health || exit 1
        docker stop test-container
